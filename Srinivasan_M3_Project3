#1. Print your name at the top of the script and load these libraries: FSA, FSAdata, magrittr,  
#dplyr, tidyr plyr and tidyverse 

print("ADITYA SRINIVASAN")

#install.packages("FSA")
#install.packages("FSAdata")
#install.packages("magrittr")
#install.packages("dplyr")
#install.packages ("tidyr")
#install.packages ("plyr")
#install.packages("tidyverse")
library(FSA)
library(FSAdata)
library(magrittr)
library(dplyr)
library(tidyr)
library(plyr)
library(tidyverse)
library(data.table)


#2. Import the inchBio.csv and name the table <bio> 
#to get the current work directory
getwd()
#to set the current work directory
setwd("C:/Users/91903/Downloads")

#loading the csv file
bio<- read.csv("inchBio.csv")
bio


#3. Display the head, tail and structure of <bio> 
head(bio)
tail(bio)
str(bio)

##Descriptive Statistics and EDA 
#install.packages("stats")
library(stats)
library(moments)
sd(bio$tl, na.rm= TRUE) #to exclude missing values
var(bio$tl, na.rm= TRUE) #to exclude missing values
sd(bio$w, na.rm= TRUE) #to exclude missing values
var(bio$w, na.rm= TRUE) #to exclude missing values
skewness(bio$tl, na.rm= TRUE) #to exclude missing values
kurtosis(bio$tl, na.rm= TRUE) #to exclude missing values
skewness(bio$w, na.rm= TRUE) #to exclude missing values
kurtosis(bio$w, na.rm= TRUE) #to exclude missing values

summary(bio)
glimpse(bio)
bioSpecies <- bio$species
Species_Freq<-table(bioSpecies)
print(Species_Freq) ##Number of Species

#Boxplot of tl
boxplot(bio$tl, main="Boxplot of tl")$out #(Shakya, S. et al., 2021)

#Boxplot of w
boxplot(bio$w, main="Boxplot of w")$out #(Shakya, S. et al., 2021)

#Count of Fish per Species 
op <- par(mar = c(5,8,4,2)) #increased the size of the y margin (with mar)
barplot(Species_Freq, 
main = "Fish Count per species", 
xlab = "COUNT", 
las = 2, #Showing our axis labels in a perpendicular angle to the Axis
cex.names = 0.9, #Axis text will be scaled to 90 percent of the default
xlim = c(0, 300), col = c(1:8), 
cex.axis = 0.8, 
cex.lab = 0.9, 
horiz = TRUE,
cex = 0.6,
space = 0.5,
)


#Counts Chart
## load package and data
library(ggplot2)
data(bio, package="ggplot2")

# Scatterplot
theme_set(theme_bw())  # pre-set the bw theme.
g <- ggplot(bio, aes(tl, w))
g + geom_count(col="tomato3", show.legend=F) +
  labs( x = "Total length of fish",        # ...x-axis
       y = "Weight of fish",    # ...y-axis
       title="Counts Plot")
#To overcome the issue of data points overlap, we can employ a counts chart. 
#Wherever we observe more points that overlap, the size of the circle gets bigger.


#Lollipop Chart
#Lollipop charts convey the same information as in bar charts.
#But,it uses thin lines, and reduces clutter
library(ggplot2)
theme_set(theme_bw())

# Plot
ggplot(bio, aes(x=species, y=w)) + 
  geom_point(size=3) + 
  geom_segment(aes(x=species, 
                   xend=species, 
                   y=0, 
                   yend=w)) + 
  labs(title="Lollipop Chart", #title of the chart 
       subtitle="Species Vs Weight of fish", #subtitle of the chart
       ) + 
  theme(axis.text.x = element_text(angle=65, vjust=0.6))


#Violin Plots 
library(ggplot2)
theme_set(theme_bw())


#A violin plot is similar to a box plot, but it shows the density within groups.
#A violin plot essentially depicts distributions of numeric data for multiple groups using density curves. 
#In a violin plot, the width of each curve corresponds with the approximate frequency of data points in each region.

#Species Vs. tl
g <- ggplot(bio, aes(species, tl))
g + geom_violin() + #this one makes it a violin plot
  labs(title="Violin plots: Species versus Total length of fish", 
       x="Species of fish",
       y="Total length of fish")+ 
  theme(axis.text.x = element_text(angle=65, vjust=0.6))


#Bar Plots: Number of Observations across Species
#install.packages("tidyverse")
library(tidyverse)
ggplot(bio) +
  geom_bar(aes(x = species), fill = '#003366', color = '#add8e6') + 
  labs (
    title = "Number of Observations across Species", # ...title
    x = "Species",        # ...x-axis
    y = "Observation Count",    # ...y-axis
  ) +
  theme(axis.text.x = element_text(angle = 90))
#Rotates x-axis text labels to 90 degrees


#Boxplot Distribution of Total length of fish as per Species 
box_plot_tl <- ggplot(bio, aes(x = species, y = tl))
box_plot_tl +
  geom_boxplot(outlier.colour = "red", #Changing the color of the outlier 
               outlier.shape = 16, 
               outlier.size = 1) +
  labs (
    title = "Boxplots of Total Length of Fish as per Species", # ...title
    x = "Species",        # ...x-axis
    y = "Total length of Fish",    # ...y-axis
  ) +
  theme(axis.text.x = element_text(angle = 90))
#Rotates x-axis text labels to 90 degrees


#Boxplot Distribution of Weight of fish as per Species 
box_plot_w <- ggplot(bio, aes(x = species, y = w))
box_plot_w +
  geom_boxplot(outlier.colour = "red", #Changing the color of the outliers 
               outlier.shape = 16, 
               outlier.size = 3) + #Specifying the size of the outliers 
  labs (
    title = "Boxplots of Weight of Fish as per Species", # ...title
    x = "Species",        # ...x-axis
    y = "Weight of Fish",    # ...y-axis
  ) +
  theme(axis.text.x = element_text(angle = 90))
#Rotates x-axis text labels to 90 degrees


#Pairwise scatter plot (R Coder, n.d.).
smoothScatter(bio$tl, bio$w, pch = 19,
              main="Pairwise scatter plot", # ...title
              xlab= "Total length of fish", # ...x-axis
              ylab= "Weight of fish", # ...y-axis
              transformation = function(x) x ^ 0.5, # Scale
              colramp = colorRampPalette(c("#f7f7f7", "aquamarine"))) # Colors


#Scatter Plot: Total length of fish versus Weight of fish 
ggplot(data = bio, mapping = aes(x = tl, y = w)) +
  geom_point(color= "steelblue")  +
labs (
  title = "Scatter Plot: tl versus w", # ...title
  x = "Total length of fish",        # ...x-axis
  y = "Weight of fish",    # ...y-axis
 )




#4. Create an object, <counts>, that counts and lists all the species records 

counts <- count(bio$species)
counts


#5. Display just the 8 levels (names) of the species 

unique(bio$species)


#6. Create a <tmp> object that displays the different species and the number of record of 
#each species in the dataset. Include this information in your report.


tmp <- table(bio$species)
tmp
class(tmp)
tmp[1] #Number of records under Black Crappie
tmp[2] #Number of records under Bluegill
tmp[3] #Number of records under Bluntnose Minnow
tmp[4] #Number of records under Iowa Darter 
tmp[5] #Number of records under Largemouth Bass 
tmp[6] #Number of records under Pumpkinseed
tmp[7] #Number of records under Tadpole Madtom
tmp[8] #Number of records under Yellow Perch


#7. Create a subset, <tmp2>, of just the species variable and display the first five records 

temp2 <- subset(bio, select = species)
temp2
head(temp2, n=5)
class(temp2)


#8. Create a table, <w>, of the species variable. Display the class of w 

w <- table(bio$species)
w
class(w)

#9. Convert <w> to a data frame named <t> and display the results 

t <- as.data.frame(w)
class(t)
t



#10. Extract and display the frequency values from the <t> data frame 

t$Freq


#11. Create a table named <cSpec> from the bio species attribute (variable) and confirm that 
#you created a table which displays the number of species in the dataset <bio> 

cSpec <- table(bio$species)
cSpec
class(cSpec)


#12. Create a table named <cSpecPct> that displays the species and percentage of records for 
#each species. Confirm you created a table class. 


cSpecPct <- prop.table(table(bio$species)) * 100 #Scaled to 100 since percentage
cSpecPct
class(cSpecPct)


#13. Convert the table, <cSpecPct>, to a data frame named <u> and confirm that <u> is a data 
#frame 

u <- as.data.frame(cSpecPct)
u
class(u)


#14. Create a barplot of <cSpec> with the following: titled Fish Count with the following 
#specifications: 
#Title: Fish Count 
#Y axis is labeled “COUNTS” 
#Color the bars Light Green 
#Rotate Y axis to be horizontal 
#Set the X axis font magnification to 60% of nominal 


op <- par(mar = c(5,8,4,2)) #increased the size of the y margin (with mar)
barplot(cSpec, main = "Fish Count", xlab = "COUNTS", col = "lightgreen", 
        las = 2, #Rotating the labels (with las=2)
        cex.axis = 0.6, #Axis text will be scaled to 60 percent of the default
        cex.lab = 0.9, 
        cex = 0.6, 
        horiz = TRUE, #Rotate Y axis to be horizontal 
        space = 0.5,
        )

#15. Create a barplot of <cSpecPct>, with the following specifications: 
#Y axis limits of 0 to 4 
#Y axis label color of Light Blue 
#Title of “Fish Relative Frequency” 


barplot((cSpecPct/100),las=2, ylim =c(0,0.4), 
        axis.lty = 1,cex.names = 0.56, col.lab="Light Blue",
col = "Light Blue", main = "Fish Relative Frequency")
#Here although in the question, the limits of Y axis has been specified as 0 to 4, we have taken 
#the limits as 0 to 0.4, as the plot looks more aesthetic. 


#16. Rearrange the <u> cSpec Pct data frame in descending order of relative frequency. Save 
#the rearranged data frame as the object <d> 


d<-data.frame(u[order(-u$Freq),])
d
is.data.frame(d)

#17. Rename the <d> columns Var 1 to Species, and Freq to RelFreq 


setnames(d,old=c ("Var1","Freq"),new=c ("Species", "RelFreq"))
d


#18. Add new variables to <d> and call them cumfreq, counts, and cumcounts 

library(ggplot2)
library(dplyr)
d$cumfreq <- cumsum(d$RelFreq)
d$counts <- (d$RelFreq* nrow(temp2))/100
d$cumcounts <- (cumsum(d$counts))
d



#19. Create a parameter variable <def_par> to store parameter variables 


def_par <- c("Species", "RelFreq","cumfreq","counts",
             "cumcounts")
def_par


#20. Create a barplot, <pc>, with the following specifications: 
#d$counts of width 1, spacing of .15 
#no boarder 
#Axes: F 
#Yaxis limit 0,3.05*max  
#d$counts na.rm is true 
#y label is Cummulative Counts 
#scale x axis to 70% 
#names.arg: d$Species 
#Title of the barplot is “Species Pareto” 
#las: 2) 


op <- par(mar = c(5,8,4,2)) #increased the size of the y margin (with mar)
pc <- barplot(d$counts, width = 1, space = 0.15, border = NA, axes = F,
              ylim = c(0,3.05*max(d$counts, na.rm = TRUE)), ylab = "Cummulative Counts", cex.axis = 0.7, names.arg = d$Species, 
              main = "Species Pareto", las=2,cex.names = 0.56,cex.main = 2)

# decreased the font size in order to fit the labels comfortably (using cex.names=0.56)



#21. Add a cumulative counts line to the <pc> plot with the following: 
#Spec line type is b 
#Scale plotting text at 70% 
#Data values are solid circles with color cyan4 


op <- par(mar = c(5,8,4,2)) #increased the size of the y margin (with mar)
pc <- barplot(d$counts, width = 1, space = 0.15, border = NA, axes = F,
              ylim = c(0,3.05*max(d$counts, na.rm = TRUE)), ylab = "Cummulative Counts", cex.axis = 0.7, names.arg = d$Species, 
              main = "Species Pareto", las=2,cex.names = 0.56,cex.main = 2)

# decreased the font size in order to fit the labels comfortably (using cex.names=0.56)
lines(pc, d$cumcounts, type = "b", cex = 0.7, pch = 19, col="cyan4") #cummulative counts



#22. Place a grey box around the pareto plot 
#(hint: https://www.statmethods.net/advgraphs/parameters.html) 

op <- par(mar = c(5,8,4,2)) #increased the size of the y margin (with mar)
pc <- barplot(d$counts, width = 1, space = 0.15, border = NA, axes = F,
              ylim = c(0,3.05*max(d$counts, na.rm = TRUE)), ylab = "Cummulative Counts", cex.axis = 0.7, names.arg = d$Species, 
              main = "Species Pareto", las=2,cex.names = 0.56,cex.main = 2)

# decreased the font size in order to fit the labels comfortably (using cex.names=0.56)
lines(pc, d$cumcounts, type = "b", cex = 0.7, pch = 19, col="cyan4") #cummulative counts
box(col = "grey62")



#23. Add a left side axis with the following specifications 
#Horizontal values at tick marks at cumcounts on side 2 
#Tickmark color of grey62 
#Color of axis is grey62 
#Axis scaled to 80% of normal 
#(hint: https://www.statmethods.net/advgraphs/axes.html)  


op <- par(mar = c(5,8,4,2)) #increased the size of the y margin (with mar)
pc <- barplot(d$counts, width = 1, space = 0.15, border = NA, axes = F,
              ylim = c(0,3.05*max(d$counts, na.rm = TRUE)), ylab = "Cummulative Counts", cex.axis = 0.7, names.arg = d$Species, 
              main = "Species Pareto", las=2,cex.names = 0.56,cex.main = 2)

# decreased the font size in order to fit the labels comfortably (using cex.names=0.56)
lines(pc, d$cumcounts, type = "b", cex = 0.7, pch = 19, col="cyan4") #cummulative counts
box(col = "grey62")
axis(side = 2, at = c(0, d$cumcounts), 
     las = 1, col.axis = "grey62", col = "grey62", cex.axis = 0.8)
#Axis scaled to 80% of normal with cex.axis = 0.8




#24. Add axis details on right side of box with the specifications: 
#Spec: Side 4 
#Tickmarks at cumcounts with labels from 0 to cumfreq with %, 
#Axis color of cyan5 and label color of cyan4 
#Axis font scaled to 80% of nominal 

#NOTE: As per the question, we have been asked to use Cyan5 color, but this color is not defined,
#so, we have used Cyan4

op <- par(mar = c(5,8,4,2)) #increased the size of the y margin (with mar)
pc <- barplot(d$counts, width = 1, space = 0.15, border = NA, axes = F,
              ylim = c(0,3.05*max(d$counts, na.rm = TRUE)), ylab = "Cummulative Counts", cex.axis = 0.7, names.arg = d$Species, 
              main = "Species Pareto", las=2,cex.names = 0.56,cex.main = 2)

# decreased the font size in order to fit the labels comfortably (using cex.names=0.56)
lines(pc, d$cumcounts, type = "b", cex = 0.7, pch = 19, col="cyan4") #cummulative counts
box(col = "grey62")
axis(side = 2, at = c(0, d$cumcounts), 
     las = 1, col.axis = "grey62", col = "grey62", cex.axis = 0.8)
#Axis scaled to 80% of normal with cex.axis = 0.8

axis(side = 4, at = c(0, d$cumcounts), labels = paste(c(0,round(d$cumfreq)),"%",sep=""),
     las =1, col.axis = "cyan4", col = "cyan4", cex.axis = 0.8)



#25. Display the finished Species Pareto Plot (without the star watermarks). Have your last 
#name on the plot 

op <- par(mar = c(5,8,4,2)) #increased the size of the y margin (with mar)
pc <- barplot(d$counts, width = 1, space = 0.15, border = NA, axes = F,
              ylim = c(0,3.05*max(d$counts, na.rm = TRUE)), ylab = "Cummulative Counts", cex.axis = 0.7, names.arg = d$Species, 
              main = "Species Pareto", las=2,cex.names = 0.56,cex.main = 2)

# decreased the font size in order to fit the labels comfortably (using cex.names=0.56)
lines(pc, d$cumcounts, type = "b", cex = 0.7, pch = 19, col="cyan4") #cummulative counts
box(col = "grey62")
axis(side = 2, at = c(0, d$cumcounts), 
     las = 1, col.axis = "grey62", col = "grey62", cex.axis = 0.8)
#Axis scaled to 80% of normal with cex.axis = 0.8

axis(side = 4, at = c(0, d$cumcounts), labels = paste(c(0,round(d$cumfreq)),"%",sep=""),
     las =1, col.axis = "cyan4", col = "cyan4", cex.axis = 0.8)
text(1,650,"SRINIVASAN", cex=.75)#lastname



#26. Commit your code in your github/gitlab repo 

#Repository Link: https://github.com/adimapleleaf/ALY6000_Module3_ADITYA_SRINIVASAN/blob/main/Srinivasan_M3_Project3 (Srinivasan, 2022b).

#Readme File:
https://github.com/adimapleleaf/ALY6000_Module3_ADITYA_SRINIVASAN/blob/main/README.md (Srinivasan, 2022a).

